{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.auth = void 0;\n  // Authentication Service\n  // This is a mock implementation - replace with actual Firebase once installed\n\n  class AuthService {\n    constructor() {\n      this.currentUser = null;\n      this.listeners = [];\n    }\n\n    // Mock sign in with email and password\n    async signInWithEmailAndPassword(email, password) {\n      try {\n        // Simulate API call delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // Mock user object\n        const user = {\n          uid: 'mock_user_' + Date.now(),\n          email: email,\n          displayName: email.split('@')[0],\n          photoURL: null,\n          emailVerified: true\n        };\n        this.currentUser = user;\n        this.notifyListeners(user);\n        return {\n          user\n        };\n      } catch (error) {\n        throw new Error('Invalid email or password');\n      }\n    }\n\n    // Mock sign up with email and password\n    async createUserWithEmailAndPassword(email, password) {\n      try {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const user = {\n          uid: 'mock_user_' + Date.now(),\n          email: email,\n          displayName: email.split('@')[0],\n          photoURL: null,\n          emailVerified: false\n        };\n        this.currentUser = user;\n        this.notifyListeners(user);\n        return {\n          user\n        };\n      } catch (error) {\n        throw new Error('Failed to create account');\n      }\n    }\n\n    // Mock sign out\n    async signOut() {\n      this.currentUser = null;\n      this.notifyListeners(null);\n    }\n\n    // Mock password reset\n    async sendPasswordResetEmail(email) {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      console.log('Password reset email sent to:', email);\n    }\n\n    // Mock auth state listener\n    onAuthStateChanged(callback) {\n      this.listeners.push(callback);\n\n      // Call immediately with current state\n      callback(this.currentUser);\n\n      // Return unsubscribe function\n      return () => {\n        this.listeners = this.listeners.filter(listener => listener !== callback);\n      };\n    }\n    notifyListeners(user) {\n      this.listeners.forEach(listener => listener(user));\n    }\n    getCurrentUser() {\n      return this.currentUser;\n    }\n  }\n\n  // Export singleton instance\n  const auth = exports.auth = new AuthService();\n\n  // When you install Firebase, replace this file with:\n  /*\n  import { \n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    signOut,\n    sendPasswordResetEmail,\n    onAuthStateChanged\n  } from 'firebase/auth';\n  import { auth } from '../config/firebase';\n  \n  export {\n    auth,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    signOut,\n    sendPasswordResetEmail,\n    onAuthStateChanged\n  };\n  */\n});","lineCount":115,"map":[[6,2,1,0],[7,2,2,0],[9,2,4,0],[9,8,4,6,"AuthService"],[9,19,4,17],[9,20,4,18],[10,4,5,2,"constructor"],[10,15,5,13,"constructor"],[10,16,5,13],[10,18,5,16],[11,6,6,4],[11,10,6,8],[11,11,6,9,"currentUser"],[11,22,6,20],[11,25,6,23],[11,29,6,27],[12,6,7,4],[12,10,7,8],[12,11,7,9,"listeners"],[12,20,7,18],[12,23,7,21],[12,25,7,23],[13,4,8,2],[15,4,10,2],[16,4,11,2],[16,10,11,8,"signInWithEmailAndPassword"],[16,36,11,34,"signInWithEmailAndPassword"],[16,37,11,35,"email"],[16,42,11,40],[16,44,11,42,"password"],[16,52,11,50],[16,54,11,52],[17,6,12,4],[17,10,12,8],[18,8,13,6],[19,8,14,6],[19,14,14,12],[19,18,14,16,"Promise"],[19,25,14,23],[19,26,14,24,"resolve"],[19,33,14,31],[19,37,14,35,"setTimeout"],[19,47,14,45],[19,48,14,46,"resolve"],[19,55,14,53],[19,57,14,55],[19,61,14,59],[19,62,14,60],[19,63,14,61],[21,8,16,6],[22,8,17,6],[22,14,17,12,"user"],[22,18,17,16],[22,21,17,19],[23,10,18,8,"uid"],[23,13,18,11],[23,15,18,13],[23,27,18,25],[23,30,18,28,"Date"],[23,34,18,32],[23,35,18,33,"now"],[23,38,18,36],[23,39,18,37],[23,40,18,38],[24,10,19,8,"email"],[24,15,19,13],[24,17,19,15,"email"],[24,22,19,20],[25,10,20,8,"displayName"],[25,21,20,19],[25,23,20,21,"email"],[25,28,20,26],[25,29,20,27,"split"],[25,34,20,32],[25,35,20,33],[25,38,20,36],[25,39,20,37],[25,40,20,38],[25,41,20,39],[25,42,20,40],[26,10,21,8,"photoURL"],[26,18,21,16],[26,20,21,18],[26,24,21,22],[27,10,22,8,"emailVerified"],[27,23,22,21],[27,25,22,23],[28,8,23,6],[28,9,23,7],[29,8,25,6],[29,12,25,10],[29,13,25,11,"currentUser"],[29,24,25,22],[29,27,25,25,"user"],[29,31,25,29],[30,8,26,6],[30,12,26,10],[30,13,26,11,"notifyListeners"],[30,28,26,26],[30,29,26,27,"user"],[30,33,26,31],[30,34,26,32],[31,8,28,6],[31,15,28,13],[32,10,28,15,"user"],[33,8,28,20],[33,9,28,21],[34,6,29,4],[34,7,29,5],[34,8,29,6],[34,15,29,13,"error"],[34,20,29,18],[34,22,29,20],[35,8,30,6],[35,14,30,12],[35,18,30,16,"Error"],[35,23,30,21],[35,24,30,22],[35,51,30,49],[35,52,30,50],[36,6,31,4],[37,4,32,2],[39,4,34,2],[40,4,35,2],[40,10,35,8,"createUserWithEmailAndPassword"],[40,40,35,38,"createUserWithEmailAndPassword"],[40,41,35,39,"email"],[40,46,35,44],[40,48,35,46,"password"],[40,56,35,54],[40,58,35,56],[41,6,36,4],[41,10,36,8],[42,8,37,6],[42,14,37,12],[42,18,37,16,"Promise"],[42,25,37,23],[42,26,37,24,"resolve"],[42,33,37,31],[42,37,37,35,"setTimeout"],[42,47,37,45],[42,48,37,46,"resolve"],[42,55,37,53],[42,57,37,55],[42,61,37,59],[42,62,37,60],[42,63,37,61],[43,8,39,6],[43,14,39,12,"user"],[43,18,39,16],[43,21,39,19],[44,10,40,8,"uid"],[44,13,40,11],[44,15,40,13],[44,27,40,25],[44,30,40,28,"Date"],[44,34,40,32],[44,35,40,33,"now"],[44,38,40,36],[44,39,40,37],[44,40,40,38],[45,10,41,8,"email"],[45,15,41,13],[45,17,41,15,"email"],[45,22,41,20],[46,10,42,8,"displayName"],[46,21,42,19],[46,23,42,21,"email"],[46,28,42,26],[46,29,42,27,"split"],[46,34,42,32],[46,35,42,33],[46,38,42,36],[46,39,42,37],[46,40,42,38],[46,41,42,39],[46,42,42,40],[47,10,43,8,"photoURL"],[47,18,43,16],[47,20,43,18],[47,24,43,22],[48,10,44,8,"emailVerified"],[48,23,44,21],[48,25,44,23],[49,8,45,6],[49,9,45,7],[50,8,47,6],[50,12,47,10],[50,13,47,11,"currentUser"],[50,24,47,22],[50,27,47,25,"user"],[50,31,47,29],[51,8,48,6],[51,12,48,10],[51,13,48,11,"notifyListeners"],[51,28,48,26],[51,29,48,27,"user"],[51,33,48,31],[51,34,48,32],[52,8,50,6],[52,15,50,13],[53,10,50,15,"user"],[54,8,50,20],[54,9,50,21],[55,6,51,4],[55,7,51,5],[55,8,51,6],[55,15,51,13,"error"],[55,20,51,18],[55,22,51,20],[56,8,52,6],[56,14,52,12],[56,18,52,16,"Error"],[56,23,52,21],[56,24,52,22],[56,50,52,48],[56,51,52,49],[57,6,53,4],[58,4,54,2],[60,4,56,2],[61,4,57,2],[61,10,57,8,"signOut"],[61,17,57,15,"signOut"],[61,18,57,15],[61,20,57,18],[62,6,58,4],[62,10,58,8],[62,11,58,9,"currentUser"],[62,22,58,20],[62,25,58,23],[62,29,58,27],[63,6,59,4],[63,10,59,8],[63,11,59,9,"notifyListeners"],[63,26,59,24],[63,27,59,25],[63,31,59,29],[63,32,59,30],[64,4,60,2],[66,4,62,2],[67,4,63,2],[67,10,63,8,"sendPasswordResetEmail"],[67,32,63,30,"sendPasswordResetEmail"],[67,33,63,31,"email"],[67,38,63,36],[67,40,63,38],[68,6,64,4],[68,12,64,10],[68,16,64,14,"Promise"],[68,23,64,21],[68,24,64,22,"resolve"],[68,31,64,29],[68,35,64,33,"setTimeout"],[68,45,64,43],[68,46,64,44,"resolve"],[68,53,64,51],[68,55,64,53],[68,58,64,56],[68,59,64,57],[68,60,64,58],[69,6,65,4,"console"],[69,13,65,11],[69,14,65,12,"log"],[69,17,65,15],[69,18,65,16],[69,49,65,47],[69,51,65,49,"email"],[69,56,65,54],[69,57,65,55],[70,4,66,2],[72,4,68,2],[73,4,69,2,"onAuthStateChanged"],[73,22,69,20,"onAuthStateChanged"],[73,23,69,21,"callback"],[73,31,69,29],[73,33,69,31],[74,6,70,4],[74,10,70,8],[74,11,70,9,"listeners"],[74,20,70,18],[74,21,70,19,"push"],[74,25,70,23],[74,26,70,24,"callback"],[74,34,70,32],[74,35,70,33],[76,6,72,4],[77,6,73,4,"callback"],[77,14,73,12],[77,15,73,13],[77,19,73,17],[77,20,73,18,"currentUser"],[77,31,73,29],[77,32,73,30],[79,6,75,4],[80,6,76,4],[80,13,76,11],[80,19,76,17],[81,8,77,6],[81,12,77,10],[81,13,77,11,"listeners"],[81,22,77,20],[81,25,77,23],[81,29,77,27],[81,30,77,28,"listeners"],[81,39,77,37],[81,40,77,38,"filter"],[81,46,77,44],[81,47,77,45,"listener"],[81,55,77,53],[81,59,77,57,"listener"],[81,67,77,65],[81,72,77,70,"callback"],[81,80,77,78],[81,81,77,79],[82,6,78,4],[82,7,78,5],[83,4,79,2],[84,4,81,2,"notifyListeners"],[84,19,81,17,"notifyListeners"],[84,20,81,18,"user"],[84,24,81,22],[84,26,81,24],[85,6,82,4],[85,10,82,8],[85,11,82,9,"listeners"],[85,20,82,18],[85,21,82,19,"forEach"],[85,28,82,26],[85,29,82,27,"listener"],[85,37,82,35],[85,41,82,39,"listener"],[85,49,82,47],[85,50,82,48,"user"],[85,54,82,52],[85,55,82,53],[85,56,82,54],[86,4,83,2],[87,4,85,2,"getCurrentUser"],[87,18,85,16,"getCurrentUser"],[87,19,85,16],[87,21,85,19],[88,6,86,4],[88,13,86,11],[88,17,86,15],[88,18,86,16,"currentUser"],[88,29,86,27],[89,4,87,2],[90,2,88,0],[92,2,90,0],[93,2,91,7],[93,8,91,13,"auth"],[93,12,91,17],[93,15,91,17,"exports"],[93,22,91,17],[93,23,91,17,"auth"],[93,27,91,17],[93,30,91,20],[93,34,91,24,"AuthService"],[93,45,91,35],[93,46,91,36],[93,47,91,37],[95,2,93,0],[96,2,94,0],[97,0,95,0],[98,0,96,0],[99,0,97,0],[100,0,98,0],[101,0,99,0],[102,0,100,0],[103,0,101,0],[104,0,102,0],[105,0,103,0],[106,0,104,0],[107,0,105,0],[108,0,106,0],[109,0,107,0],[110,0,108,0],[111,0,109,0],[112,0,110,0],[113,0,111,0],[114,0,112,0],[115,0,94,0],[115,3]],"functionMap":{"names":["<global>","AuthService","AuthService#constructor","AuthService#signInWithEmailAndPassword","Promise$argument_0","AuthService#createUserWithEmailAndPassword","AuthService#signOut","AuthService#sendPasswordResetEmail","AuthService#onAuthStateChanged","<anonymous>","listeners.filter$argument_0","AuthService#notifyListeners","listeners.forEach$argument_0","AuthService#getCurrentUser"],"mappings":"AAA;ACG;ECC;GDG;EEG;wBCG,oCD;GFkB;EIG;wBDE,oCC;GJiB;EKG;GLG;EMG;sBHC,mCG;GNE;EOG;WCO;6CCC,iCD;KDC;GPC;EUE;2BCC,0BD;GVC;EYE;GZE;CDC"}},"type":"js/module"}]}